/*************************************************************************
【文件名】 FixedSet.hpp
【功能模块和目的】 FixedSet 类定义了一个静态大小的集合。
【开发者及日期】 赵一彤 2024/7/24
*************************************************************************/

#ifndef FIXED_SET_HPP
#define FIXED_SET_HPP

#include <array>
#include <cstddef>
#include <initializer_list>
#include "DistinctCollection.hpp"
#include "DynamicSet.hpp"
using namespace std;

namespace C3w {

namespace Containers {

// FixedSet 不实现交并补操作，因为操作后大小不定。
// 因此 FixedSet 不继承于 DynamicSet。
/*************************************************************************
【类名】 FixedSet
【功能】 定义一个元素类型为 T，大小为 N 的集合。
【接口说明】 获取/设置元素，判断是否包含元素。
【开发者及日期】 赵一彤 2024/7/24
*************************************************************************/
template <typename T, size_t N>
class FixedSet: public DistinctCollection<T> {
    public:
        // 构造函数

        // 删除无参构造函数
        FixedSet() = delete;
        /**********************************************************************
        【函数名称】 构造函数
        【函数功能】 使用初始化列表初始化 FixedSet 类型实例。
        【参数】
            elements: 元素初始化列表。
        【返回值】 无
        【开发者及日期】 赵一彤 2024/7/24
        **********************************************************************/
        FixedSet(initializer_list<T> elements);
        /**********************************************************************
        【函数名称】 构造函数
        【函数功能】 使用 std::array<T, N> 初始化 FixedSet 类型实例。
        【参数】
            elements: 元素组成的数组。
        【返回值】 无
        【开发者及日期】 赵一彤 2024/7/24
        **********************************************************************/
        FixedSet(const array<T, N>& elements);
        /**********************************************************************
        【函数名称】 拷贝构造函数
        【函数功能】 使用另一 FixedSet 初始化 FixedSet 类的实例。
        【参数】
            other: 另一 FixedSet 实例。
        【返回值】 无
        【开发者及日期】 赵一彤 2024/7/24
        **********************************************************************/
        FixedSet(const FixedSet<T, N>& other) = default;

        // 属性

        /**********************************************************************
        【函数名称】 Count
        【函数功能】 获取元素个数。
        【参数】 无
        【返回值】 
            容器中的元素个数。
        【开发者及日期】 赵一彤 2024/7/24
        **********************************************************************/
        size_t Count() const override;

        // 操作

        /**********************************************************************
        【函数名称】 ToDynamic
        【函数功能】 将自身转化为 DynamicSet。
        【参数】 无
        【返回值】 
            转化后的对象。
        【开发者及日期】 赵一彤 2024/7/24
        **********************************************************************/
        DynamicSet<T> ToDynamic() const;

        // 操作符

        /**********************************************************************
        【函数名称】 operator=
        【函数功能】 将其他集合赋值给自身。
        【参数】 
            other: 从之取值的集合。
        【返回值】 
            自身的引用。
        【开发者及日期】 赵一彤 2024/7/24
        **********************************************************************/
        FixedSet<T, N>& operator=(const FixedSet<T, N>& other) = default;
        /**********************************************************************
        【函数名称】 operator DynamicSet<T>
        【函数功能】 将自身转化为 DynamicSet。
        【参数】 无
        【返回值】 
            转化后的对象。
        【开发者及日期】 赵一彤 2024/7/24
        **********************************************************************/
        operator DynamicSet<T>() const;

        // 迭代器

        /**********************************************************************
        【函数名称】 begin
        【函数功能】 获取头部迭代器。
        【参数】 无
        【返回值】 
            指向首个元素的迭代器。
        【开发者及日期】 赵一彤 2024/7/24
        **********************************************************************/
        typename array<T, N>::const_iterator begin() const;
        /**********************************************************************
        【函数名称】 end
        【函数功能】 获取尾部迭代器。
        【参数】 无
        【返回值】 
            指向最后元素之后的迭代器。
        【开发者及日期】 赵一彤 2024/7/24
        **********************************************************************/
        typename array<T, N>::const_iterator end() const;
    protected:
        /**********************************************************************
        【函数名称】 InnerGet
        【函数功能】 无条件获取元素值。
        【参数】 
            index: 要获取的下标。
        【返回值】 
            指定位置元素的常引用。
        【开发者及日期】 赵一彤 2024/7/24
        **********************************************************************/
        const T& InnerGet(size_t index) const override;
        /**********************************************************************
        【函数名称】 InnerSet
        【函数功能】 无条件设置元素值。
        【参数】 
            index: 要设置的下标。
            value: 要设置的值。
        【返回值】 无
        【开发者及日期】 赵一彤 2024/7/24
        **********************************************************************/
        void InnerSet(size_t index, const T& value) override;
        /**********************************************************************
        【函数名称】 ShouldAdd
        【函数功能】 判断是否应该添加元素。
        【参数】 
            value: 要添加的值。
        【返回值】 
            是否应该添加元素。
        【开发者及日期】 赵一彤 2024/7/24
        **********************************************************************/
        bool ShouldAdd(const T& value) const override;
        /**********************************************************************
        【函数名称】 InnerAdd
        【函数功能】 无条件添加元素。
        【参数】 
            value: 要添加的值。
        【返回值】 无
        【开发者及日期】 赵一彤 2024/7/24
        **********************************************************************/
        void InnerAdd(const T& value) override;
        /**********************************************************************
        【函数名称】 ShouldRemove
        【函数功能】 判断是否应该删除元素。
        【参数】 
            index: 要删除的下标。
        【返回值】 
            是否应该删除元素。
        【开发者及日期】 赵一彤 2024/7/24
        **********************************************************************/
        bool ShouldRemove(size_t index) const override;
        /**********************************************************************
        【函数名称】 InnerRemove
        【函数功能】 无条件删除元素。
        【参数】 
            index: 要删除的下标。
        【返回值】 无
        【开发者及日期】 赵一彤 2024/7/24
        **********************************************************************/
        void InnerRemove(size_t index) override;
        /**********************************************************************
        【函数名称】 ShouldInsert
        【函数功能】 判断是否应该插入元素。
        【参数】 
            index: 要插入位置的下标。
            element: 新的元素。
        【返回值】 
            是否应该插入元素。
        【开发者及日期】 赵一彤 2024/7/24
        **********************************************************************/
        bool ShouldInsert(size_t index, const T& element) const override;
        /**********************************************************************
        【函数名称】 InnerInsert
        【函数功能】 无条件插入元素。
        【参数】 
            index: 要插入位置的下标。
            element: 新的元素。
        【返回值】 无
        【开发者及日期】 赵一彤 2024/7/24
        **********************************************************************/
        void InnerInsert(size_t index, const T& element) override;
    private:
        array<T, N> m_Elements;
};

}

}

#include "FixedSet.tpp"

#endif