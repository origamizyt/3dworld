/*************************************************************************
【文件名】 CollectionBase.hpp
【功能模块和目的】 CollectionBase 类定义了一个完全抽象的容器。
【开发者及日期】 赵一彤 2024/7/24
*************************************************************************/

#ifndef COLLECTION_BASE_HPP
#define COLLECTION_BASE_HPP

#include <cstddef>
#include <string>
#include "../Tools/Representable.hpp"
using namespace std;

namespace C3w {

namespace Containers { 

/*************************************************************************
【类名】 CollectionBase
【功能】 定义一个元素类型为 T 的抽象容器。
【接口说明】 获取/设置/添加/删除元素，判断是否包含元素。
【开发者及日期】 赵一彤 2024/7/24
*************************************************************************/
template <typename T>
class CollectionBase: public Tools::Representable {
    public:
        // 属性

        /**********************************************************************
        【函数名称】 Count
        【函数功能】 获取元素个数。
        【参数】 无
        【返回值】 
            容器中的元素个数。
        【开发者及日期】 赵一彤 2024/7/24
        **********************************************************************/
        virtual size_t Count() const = 0;

        // 访问器

        /**********************************************************************
        【函数名称】 Get
        【函数功能】 获取指定下标处的元素。如果越界抛出 IndexOverflowException。
        【参数】 
            Index: 元素下标。
        【返回值】 
            指定位置元素的常引用。
        【开发者及日期】 赵一彤 2024/7/24
        **********************************************************************/
        const T& Get(size_t Index) const;
        /**********************************************************************
        【函数名称】 TrySet
        【函数功能】 尝试设置指定位置元素的值。如果越界抛出 IndexOverflowException。
        【参数】 
            Index: 元素下标。
            Value: 新的值。
        【返回值】 
            操作是否成功。
        【开发者及日期】 赵一彤 2024/7/24
        **********************************************************************/
        bool TrySet(size_t Index, const T& Value);
        /**********************************************************************
        【函数名称】 Set
        【函数功能】 
            设置指定位置元素的值。
            如果操作失败抛出 CollectionException。
            如果越界抛出 IndexOverflowException。
        【参数】 
            Index: 元素下标。
            Value: 新的值。
        【返回值】 无
        【开发者及日期】 赵一彤 2024/7/24
        **********************************************************************/
        void Set(size_t Index, const T& Value);

        // 操作

        /**********************************************************************
        【函数名称】 IsEqual
        【函数功能】 判断自身和另一容器是否相等。
        【参数】 
            Other: 另一容器。
        【返回值】 
            两容器是否相等。
        【开发者及日期】 赵一彤 2024/7/24
        **********************************************************************/
        bool IsEqual(const CollectionBase<T>& Other) const;
        /**********************************************************************
        【函数名称】 IsEqual
        【函数功能】 判断两容器是否相等。
        【参数】 
            Left: 第一个容器。
            Right: 第二个容器。
        【返回值】 
            两容器是否相等。
        【开发者及日期】 赵一彤 2024/7/24
        **********************************************************************/
        static bool IsEqual(
            const CollectionBase<T>& Left,
            const CollectionBase<T>& Right
        );
        /**********************************************************************
        【函数名称】 TryAdd
        【函数功能】 尝试添加一个元素。
        【参数】 
            Value: 新的元素。
        【返回值】 
            操作是否成功。
        【开发者及日期】 赵一彤 2024/7/24
        **********************************************************************/
        bool TryAdd(const T& Value);
        /**********************************************************************
        【函数名称】 TryEmplaceAdd
        【函数功能】 尝试添加一个元素。
        【参数】 
            Args: 转给 T 类型构造函数的参数。
        【返回值】 
            操作是否成功。
        【开发者及日期】 赵一彤 2024/7/24
        **********************************************************************/
        template <typename ...A>
        bool TryEmplaceAdd(A&& ...Args);
        /**********************************************************************
        【函数名称】 Add
        【函数功能】 添加一个元素。如果操作失败抛出 CollectionException。
        【参数】 
            Value: 新的元素。
        【返回值】 无
        【开发者及日期】 赵一彤 2024/7/24
        **********************************************************************/
        void Add(const T& Value);
        /**********************************************************************
        【函数名称】 EmplaceAdd
        【函数功能】 添加一个元素。如果操作失败抛出 CollectionException。
        【参数】 
            Args: 转给 T 类型构造函数的参数。
        【返回值】 无
        【开发者及日期】 赵一彤 2024/7/24
        **********************************************************************/
        template <typename ...A>
        void EmplaceAdd(A&& ...Args);
        /**********************************************************************
        【函数名称】 TryRemove
        【函数功能】 删除指定位置元素。如果越界抛出 IndexOverflowException。
        【参数】 
            Index: 元素下标。
        【返回值】 
            操作是否成功。
        【开发者及日期】 赵一彤 2024/7/24
        **********************************************************************/
        bool TryRemove(size_t Index);
        /**********************************************************************
        【函数名称】 Remove
        【函数功能】 
            删除指定位置元素。
            如果操作失败抛出 CollectionException。
            如果越界抛出 IndexOverflowException。
        【参数】 
            Index: 元素下标。
        【返回值】 无
        【开发者及日期】 赵一彤 2024/7/24
        **********************************************************************/
        void Remove(size_t Index);
        /**********************************************************************
        【函数名称】 TryInsert
        【函数功能】 将指定元素插入容器。如果越界抛出 IndexOverflowException。
        【参数】 
            Index: 元素被插入位置的下标。
            Value: 新的元素。
        【返回值】 
            操作是否成功。
        【开发者及日期】 赵一彤 2024/7/24
        **********************************************************************/
        bool TryInsert(size_t Index, const T& Value);
        /**********************************************************************
        【函数名称】 TryEmplaceInsert
        【函数功能】 将指定元素插入容器。如果越界抛出 IndexOverflowException。
        【参数】 
            Index: 元素被插入位置的下标。
            Args: 传给 T 类型构造函数的参数。
        【返回值】 
            操作是否成功。
        【开发者及日期】 赵一彤 2024/7/24
        **********************************************************************/
        template <typename ...A>
        bool TryEmplaceInsert(size_t Index, A&& ...Args);
        /**********************************************************************
        【函数名称】 Insert
        【函数功能】 
            将指定元素插入容器。
            如果操作失败抛出 CollectionException。
            如果越界抛出 IndexOverflowException。
        【参数】 
            Index: 元素被插入位置的下标。
            Value: 新的元素。
        【返回值】 无
        【开发者及日期】 赵一彤 2024/7/24
        **********************************************************************/
        void Insert(size_t Index, const T& Value);
        /**********************************************************************
        【函数名称】 Insert
        【函数功能】 
            将指定元素插入容器。
            如果操作失败抛出 CollectionException。
            如果越界抛出 IndexOverflowException。
        【参数】 
            Index: 元素被插入位置的下标。
            Args: 传给 T 类型构造函数的参数。
        【返回值】 无
        【开发者及日期】 赵一彤 2024/7/24
        **********************************************************************/
        template <typename ...A>
        void EmplaceInsert(size_t Index, A&& ...Args);
        /**********************************************************************
        【函数名称】 Contains
        【函数功能】 判断给定的值是否在容器内。
        【参数】 
            Value: 要进行判断的值。
        【返回值】 
            值是否在容器内。
        【开发者及日期】 赵一彤 2024/7/24
        **********************************************************************/
        bool Contains(const T& Value) const;
        /**********************************************************************
        【函数名称】 FindIndex
        【函数功能】 寻找给定值在容器中的下标。找不到则抛出 CollectionException。
        【参数】 
            Value: 要寻找的值。
        【返回值】 
            容器中的下标。
        【开发者及日期】 赵一彤 2024/7/24
        **********************************************************************/
        size_t FindIndex(const T& Value) const;

        // 操作符

        /**********************************************************************
        【函数名称】 operator[]
        【函数功能】 获取指定下标处的元素。如果越界抛出 IndexOverflowException。
        【参数】 
            Index: 元素下标。
        【返回值】 
            指定位置元素的常引用。
        【开发者及日期】 赵一彤 2024/7/24
        **********************************************************************/
        const T& operator[](size_t Index) const;
        /**********************************************************************
        【函数名称】 operator==
        【函数功能】 判断自身和另一容器是否相等。
        【参数】 
            Other: 另一容器。
        【返回值】 
            两容器是否相等。
        【开发者及日期】 赵一彤 2024/7/24
        **********************************************************************/
        bool operator==(const CollectionBase<T>& Other) const;
        /**********************************************************************
        【函数名称】 operator!=
        【函数功能】 判断自身和另一容器是否不等。
        【参数】 
            Other: 另一容器。
        【返回值】 
            两容器是否不等。
        【开发者及日期】 赵一彤 2024/7/24
        **********************************************************************/
        bool operator!=(const CollectionBase<T>& Other) const;

        // 格式化
        /**********************************************************************
        【函数名称】 ToString
        【函数功能】 返回此对象的字符串表达形式。
        【参数】 无
        【返回值】 
            此对象的字符串表达形式。
        【开发者及日期】 赵一彤 2024/7/24
        **********************************************************************/
        string ToString() const override;

        // 虚析构函数
        virtual ~CollectionBase() = default;
    
    protected:
        /**********************************************************************
        【函数名称】 InnerGet
        【函数功能】 无条件获取元素值。
        【参数】 
            Index: 要获取的下标。
        【返回值】 
            指定位置元素的常引用。
        【开发者及日期】 赵一彤 2024/7/24
        **********************************************************************/
        virtual const T& InnerGet(size_t Index) const = 0;
        /**********************************************************************
        【函数名称】 ShouldSet
        【函数功能】 判断是否应该设置元素值。
        【参数】 
            Index: 要设置的下标。
            Value: 要设置的值。
        【返回值】 
            是否应该设置元素。
        【开发者及日期】 赵一彤 2024/7/24
        **********************************************************************/
        virtual bool ShouldSet(size_t Index, const T& Value) const;
        /**********************************************************************
        【函数名称】 InnerSet
        【函数功能】 无条件设置元素值。
        【参数】 
            Index: 要设置的下标。
            Value: 要设置的值。
        【返回值】 无
        【开发者及日期】 赵一彤 2024/7/24
        **********************************************************************/
        virtual void InnerSet(size_t Index, const T& Value) = 0;
        /**********************************************************************
        【函数名称】 ShouldAdd
        【函数功能】 判断是否应该添加元素。
        【参数】 
            Value: 要添加的值。
        【返回值】 
            是否应该添加元素。
        【开发者及日期】 赵一彤 2024/7/24
        **********************************************************************/
        virtual bool ShouldAdd(const T& Value) const;
        /**********************************************************************
        【函数名称】 InnerAdd
        【函数功能】 无条件添加元素。
        【参数】 
            Value: 要添加的值。
        【返回值】 无
        【开发者及日期】 赵一彤 2024/7/24
        **********************************************************************/
        virtual void InnerAdd(const T& Value) = 0;
        /**********************************************************************
        【函数名称】 ShouldRemove
        【函数功能】 判断是否应该删除元素。
        【参数】 
            Index: 要删除的下标。
        【返回值】 
            是否应该删除元素。
        【开发者及日期】 赵一彤 2024/7/24
        **********************************************************************/
        virtual bool ShouldRemove(size_t Index) const;
        /**********************************************************************
        【函数名称】 InnerRemove
        【函数功能】 无条件删除元素。
        【参数】 
            Index: 要删除的下标。
        【返回值】 无
        【开发者及日期】 赵一彤 2024/7/24
        **********************************************************************/
        virtual void InnerRemove(size_t Index) = 0;
        /**********************************************************************
        【函数名称】 ShouldInsert
        【函数功能】 判断是否应该插入元素。
        【参数】 
            Index: 要插入位置的下标。
            Value: 新的元素。
        【返回值】 
            是否应该插入元素。
        【开发者及日期】 赵一彤 2024/7/24
        **********************************************************************/
        virtual bool ShouldInsert(size_t Index, const T& Value) const;
        /**********************************************************************
        【函数名称】 InnerInsert
        【函数功能】 无条件插入元素。
        【参数】 
            Index: 要插入位置的下标。
            Value: 新的元素。
        【返回值】 无
        【开发者及日期】 赵一彤 2024/7/24
        **********************************************************************/
        virtual void InnerInsert(size_t Index, const T& Value) = 0;
};

}

}

#include "CollectionBase.tpp"

#endif